#! /usr/bin/env python
import rospy
import tf2_ros
from tf2_geometry_msgs import tf2_geometry_msgs
"""
   订阅方:订阅坐标变换信息，传入被转换的坐标点，调用转换算法
   流程:
       1.导包;
       2.初始化;
       3.创建订阅对象;
       4.组织被转换的坐标点;
       5.转换逻辑实现,调用tf封装的算法;
       6.输出结果;
       7.spin() |spinOnce();
"""
if __name__ == "__main__":
    rospy.init_node("dynamic_sub_p")
    #3-1 创建缓存对象缓存数据
    buffer = tf2_ros.Buffer()
    #3-2 创建订阅对象(将缓存传入)
    sub = tf2_ros.TransformListener(buffer)
    #4.组织被转换的坐标点
    ps = tf2_geometry_msgs.PointStamped()
    #时间设置为0
    ps.header.stamp = rospy.Time()
    ps.header.frame_id = "turtle1"
    ps.point.x = 2.0
    ps.point.y = 3.0
    ps.point.z = 5.0
    #转换逻辑实现，调用tf封装的算法;
    du =rospy.Duration(5)
    rospy.sleep(du)
    rate = rospy.Rate(10)
    while not rospy.is_shutdown():
           
        #转换实现
        #两个参数，参数1：被转换的坐标点，参数2:目标坐标系 返回值:转换后的坐标点
        #base link 不存在的原因，是转换时还没有订阅到坐标系的相对信息,可以用try捕获异常或者用时间函数等待一段时间
        ps_out =buffer.transform(ps,"world")
        #输出结果
        rospy.loginfo("转换后的坐标(%.2f,%2f,%.2f),参考的坐标系:%s",
            ps_out.point.x,
            ps_out.point.y,
            ps_out.point.z,
            ps_out.header.frame_id)
        
       
    rate.sleep()