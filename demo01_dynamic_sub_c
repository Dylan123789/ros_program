#include "ros/ros.h"
#include "tf2_ros/transform_listener.h"
#include "tf2_ros/buffer.h"
#include "geometry_msgs/PointStamped.h"
#include "tf2_geometry_msgs/tf2_geometry_msgs.h"
/*
  订阅方:订阅发布的坐标系相对关系,传入一个座标点,调用tf实现转换
  流程:
  1.包含头文件
  2.编码,初始化,NodeHandle(必须)
  3.创建订阅者对象--->订阅坐标系相对关系
  4.组织一个坐标点数据;
  5.转换算法,需要调用tf内置实现;
  6.最后输出;

*/
int main(int argc,char *argv[])
{
   setlocale(LC_ALL,"");
   ros::init(argc,argv,"static_sub");
   ros::NodeHandle nh;
   //3-1创建buffer缓存
   tf2_ros::Buffer buffer;
   //3-2创建监听对象,监听对象可以将订阅的数据存入buffer
   tf2_ros::TransformListener listener(buffer);
   //4.组织一个坐标点数据
   geometry_msgs::PointStamped ps;
   //参考坐标系（点所在的那个参考系）
   ps.header.frame_id = "turtle1";
   ps.header.stamp =ros::Time(0.0);
   ps.point.x=2.0;
   ps.point.y=3.0;
   ps.point.z=5.0;
   //添加休眠
   ros::Duration(2).sleep();
   //5.转换算法;
   ros::Rate rate(10);
   while(ros::ok())
   { //算法实现---将ps转换成相对于world的坐标点
     geometry_msgs::PointStamped ps_out;
     ps_out = buffer.transform(ps,"world");
     /*
       调用buffer的转换函数transform
       参数1:被转换的坐标点
       参数2:目标坐标系
       返回值:输出的坐标点
       PS:调用时必须包含头文件，tf2_geometry_msgs/tf2_geometry_msgs.h
       问题解决:base_link不存在是因为transform调用时，数据还没有订阅到,buffer还没有缓存,需要先停滞几秒让buffer缓存数据，再进行转换
               方案2:异常处理,使用try函数
     */
     
     //6.最后输出
     ROS_INFO("转换后的坐标值:(%.2f,%.2f,%.2f),参考的坐标系:%s",
                ps_out.point.x,ps_out.point.y,ps_out.point.z,ps_out.header.frame_id.c_str());
     rate.sleep();
     ros::spinOnce();

   }

}